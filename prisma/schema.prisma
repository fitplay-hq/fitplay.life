// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

generator zod {
  provider = "prisma-zod-generator"
  output = "../lib/generated/zod"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(uuid())
  name      String   @default("admin")
  email     String   @unique
  password  String
  role      Role     @default(ADMIN)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()
}

model User {
  id        String    @id @default(uuid())
  name      String    @db.VarChar(30)
  email     String    @unique
  password  String
  phone     String    @unique
  role      Role
  gender    Gender?
  birthDate DateTime?
  company   Company   @relation(fields: [companyId], references: [id])
  companyId String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt()
  verified  Boolean   @default(false)
}

model VerificationToken {
  id         String   @id @default(uuid())
  identifier String // email
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
}

model Company {
  id        String    @id @default(uuid())
  name      String    @db.VarChar(50)
  address   String    @db.VarChar(100)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt()
  users     User[]
  products  Product[]
}

model Product {
  id             String      @id @default(uuid())
  name           String      @db.VarChar(50)
  images         String[]
  description    String
  vendorName     String      @db.VarChar(50)
  discount       Int?
  sku            String      @unique @db.VarChar(100)
  availableStock Int
  category       Category
  subCategory    SubCategory?
  specifications Json?
  avgRating      Float?
  noOfReviews    Int?
  companies      Company[]
  variants       Variant[]
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @default(now()) @updatedAt()
}

model Variant {
  id              String   @id @default(uuid())
  variantCategory String   @db.VarChar(50)
  variantValue    String   @db.VarChar(100)
  mrp             Int
  credits         String? // optional field if you want
  product         Product  @relation(fields: [productId], references: [id])
  productId       String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now()) @updatedAt()
}

enum Category {
  Fitness_And_Gym_Equipment
  Nutrition_And_Health
  Diagnostics_And_Prevention
  Ergonomics_And_Workspace_Comfort
  Health_And_Wellness_Services
}

enum SubCategory {
  Cardio_Equipment
  Probiotics_And_Supplements
  Wearable_Health_Technology
  Standing_Desks_And_Accessories
  Onsite_Fitness_Classes_And_Workshops
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum Role {
  ADMIN
  HR
  EMPLOYEE
}
